Multiple projects found, consider using a single `tsconfig` with `references` to speed up, or use `noWarnOnMultipleProjects` to suppress this warning
[{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/App.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":7,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":7,"endColumn":13},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":7,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":7,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\n\nimport FormViewer from './pages/FormViewer';\nimport MultiImageUploadTest from './pages/MultiImageUploadTest';\nimport './App.css';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState<'formviewer' | 'multiupload'>('formviewer');\n\n  return (\n    <div className=\"App\">\n      <nav className=\"bg-gray-800 border-b border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex h-16 items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => setActiveTab('multiupload')}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                  activeTab === 'multiupload'\n                    ? 'bg-gray-900 text-white'\n                    : 'text-gray-300 hover:bg-gray-700 hover:text-white'\n                }`}\n              >\n                📸 Multi-Image Upload\n              </button>\n              <button\n                onClick={() => setActiveTab('formviewer')}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                  activeTab === 'formviewer'\n                    ? 'bg-gray-900 text-white'\n                    : 'text-gray-300 hover:bg-gray-700 hover:text-white'\n                }`}\n              >\n                📋 Form Viewer\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <main>\n        {activeTab === 'multiupload' && <MultiImageUploadTest />}\n        {activeTab === 'formviewer' && <FormViewer />}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/components/ErrorBoundary.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":25,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":25,"endColumn":20},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":25,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":25,"endColumn":20},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":32,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":32,"endColumn":9},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":32,"column":3,"nodeType":"FunctionExpression","messageId":"missingReturnType","endLine":32,"endColumn":9},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":34,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":34,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[780,782],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Component, type ReactNode, type ErrorInfo } from 'react';\n\nimport { logger } from '../utils/logger';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    logger.error('Upload component error', { \n      error: error.message, \n      componentStack: errorInfo.componentStack \n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.fallback || (\n        <div \n          className=\"p-6 bg-red-900 rounded-lg text-white\"\n          role=\"alert\"\n          aria-live=\"assertive\"\n        >\n          <h3 className=\"font-bold text-lg mb-2\">Upload Error</h3>\n          <p className=\"mb-4\">Something went wrong with the file upload.</p>\n          <button\n            onClick={() => this.setState({ hasError: false, error: null })}\n            className=\"px-4 py-2 bg-red-700 hover:bg-red-600 rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-red-500\"\n          >\n            Try Again\n          </button>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/components/MultiImageUpload.tsx","messages":[{"ruleId":"import/order","severity":2,"message":"`@formio/file-upload` import should occur before import of `@uppy/compressor`","line":10,"column":1,"nodeType":"ImportDeclaration","endLine":10,"endColumn":90},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":36,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":36,"endColumn":33},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":36,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":36,"endColumn":33},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'file'.","line":122,"column":9,"nodeType":"Identifier","messageId":"assignmentToFunctionParamProp","endLine":122,"endColumn":13},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'file'.","line":142,"column":9,"nodeType":"Identifier","messageId":"assignmentToFunctionParamProp","endLine":142,"endColumn":13},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'file'.","line":152,"column":9,"nodeType":"Identifier","messageId":"assignmentToFunctionParamProp","endLine":152,"endColumn":13},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":164,"column":33,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":164,"endColumn":35,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4740,4742],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":165,"column":37,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":165,"endColumn":39,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4783,4785],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":166,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":166,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4830,4832],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":167,"column":40,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":167,"endColumn":42,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4898,4900],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"no-undef","severity":2,"message":"'setTimeout' is not defined.","line":183,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":183,"endColumn":17},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":191,"column":49,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":191,"endColumn":51,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[5580,5582],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":192,"column":44,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":192,"endColumn":46,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[5629,5631],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"react/no-array-index-key","severity":1,"message":"Do not use Array index in keys","line":258,"column":22,"nodeType":"Identifier","messageId":"noArrayIndex","endLine":258,"endColumn":25}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Compressor from '@uppy/compressor';\nimport Uppy from '@uppy/core';\nimport GoldenRetriever from '@uppy/golden-retriever';\nimport { Dashboard } from '@uppy/react';\nimport Tus from '@uppy/tus';\nimport Webcam from '@uppy/webcam';\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport '@uppy/core/css/style.css';\nimport '@uppy/dashboard/css/style.css';\nimport { verifyFileType, sanitizeFilename, UPLOAD_CONSTANTS } from '@formio/file-upload';\n\nimport { logger } from '../utils/logger';\n\nexport interface MultiImageUploadProps {\n  formKey?: string;\n  maxFiles?: number;\n  compressionQuality?: number;\n  autoNumbering?: boolean;\n  extractMetadata?: boolean;\n  onChange?: (files: UploadedFile[]) => void;\n  value?: UploadedFile[];\n}\n\nexport interface UploadedFile {\n  url: string;\n  name: string;\n  number: number;\n  timestamp: number;\n  latitude?: number;\n  longitude?: number;\n  accuracy?: number;\n  size: number;\n  type: string;\n}\n\nexport function MultiImageUpload({\n  formKey = 'site_images',\n  maxFiles = UPLOAD_CONSTANTS.DEFAULT_MAX_FILES,\n  compressionQuality = UPLOAD_CONSTANTS.DEFAULT_COMPRESSION_QUALITY,\n  autoNumbering = true,\n  extractMetadata = true,\n  onChange,\n  value = []\n}: MultiImageUploadProps) {\n  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>(value);\n  const [uploadStatus, setUploadStatus] = useState<string>('');\n\n  const [uppy] = useState(() => {\n    return new Uppy({\n      id: formKey,\n      restrictions: {\n        maxNumberOfFiles: maxFiles,\n        allowedFileTypes: ['image/*', 'video/*'],\n        maxFileSize: 10 * 1024 * 1024\n      },\n      autoProceed: false,\n      meta: {\n        formKey\n      }\n    })\n      .use(Tus, {\n        endpoint: UPLOAD_CONSTANTS.DEFAULT_TUS_ENDPOINT,\n        chunkSize: UPLOAD_CONSTANTS.DEFAULT_CHUNK_SIZE,\n        retryDelays: [...UPLOAD_CONSTANTS.RETRY_DELAYS],\n        removeFingerprintOnSuccess: true,\n        withCredentials: false\n      })\n      .use(Compressor, {\n        quality: compressionQuality,\n        maxWidth: UPLOAD_CONSTANTS.MAX_IMAGE_WIDTH,\n        maxHeight: UPLOAD_CONSTANTS.MAX_IMAGE_HEIGHT,\n        convertSize: UPLOAD_CONSTANTS.COMPRESSION_CONVERT_SIZE,\n        mimeType: UPLOAD_CONSTANTS.COMPRESSION_MIME_TYPE\n      })\n      .use(Webcam, {\n        modes: ['picture'],\n        mirror: false\n      })\n      .use(GoldenRetriever, {\n        expires: 24 * 60 * 60 * 1000,\n        serviceWorker: true\n      });\n  });\n\n  // ✅ Cache geolocation once\n  const geoLocationRef = useRef<{ latitude: number; longitude: number; accuracy: number } | null>(\n    null\n  );\n  const geoLocationFetchedRef = useRef(false);\n\n  // ✅ Fetch geolocation once on mount\n  useEffect(() => {\n    if (extractMetadata && 'geolocation' in navigator && !geoLocationFetchedRef.current) {\n      geoLocationFetchedRef.current = true;\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          geoLocationRef.current = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            accuracy: position.coords.accuracy\n          };\n          logger.info('Geolocation fetched', geoLocationRef.current);\n        },\n        error => {\n          logger.warn('Geolocation unavailable', { code: error.code });\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0\n        }\n      );\n    }\n  }, [extractMetadata]);\n\n  const handleFileAdded = useCallback(\n    async (file: any) => {\n      const files = uppy.getFiles();\n      const index = files.length;\n\n      if (autoNumbering) {\n        file.meta = {\n          ...file.meta,\n          displayName: `Site Image ${index}`,\n          number: index,\n          timestamp: Date.now()\n        };\n      }\n\n      try {\n        const isValid = await verifyFileType(file.data, file.type);\n        if (!isValid) {\n          uppy.removeFile(file.id);\n          uppy.info(`Invalid file type for ${file.name}`, 'error', 5000);\n          return;\n        }\n\n        const safeName = sanitizeFilename(file.name, {\n          addTimestamp: true,\n          lowercase: false\n        });\n        file.name = safeName;\n      } catch {\n        logger.error('File validation failed', { filename: file.name, type: file.type });\n        uppy.removeFile(file.id);\n        uppy.info('File validation failed', 'error', 5000);\n        return;\n      }\n\n      // ✅ Use cached geolocation\n      if (geoLocationRef.current) {\n        file.meta = {\n          ...file.meta,\n          ...geoLocationRef.current\n        };\n      }\n    },\n    [uppy, autoNumbering]\n  );\n\n  const handleUploadSuccess = useCallback(\n    (file: any, response: any) => {\n      const uploadedFile: UploadedFile = {\n        url: response.uploadURL || '',\n        name: file.meta.displayName || file.name,\n        number: file.meta.number || uploadedFiles.length + 1,\n        timestamp: file.meta.timestamp || Date.now(),\n        latitude: file.meta.latitude,\n        longitude: file.meta.longitude,\n        accuracy: file.meta.accuracy,\n        size: file.size,\n        type: file.type\n      };\n\n      setUploadedFiles(prev => {\n        const updated = [...prev, uploadedFile];\n        onChange?.(updated);\n        return updated;\n      });\n\n      // Announce to screen readers\n      setUploadStatus(`Successfully uploaded ${file.name}`);\n      setTimeout(() => setUploadStatus(''), 3000);\n    },\n    [uploadedFiles.length, onChange]\n  );\n\n  const handleComplete = useCallback(\n    (result: any) => {\n      logger.info('Upload complete', {\n        successCount: result.successful?.length || 0,\n        failedCount: result.failed?.length || 0\n      });\n\n      if (result.successful && result.successful.length > 0) {\n        uppy.info(`Successfully uploaded ${result.successful.length} file(s)`, 'success', 3000);\n      }\n\n      if (result.failed && result.failed.length > 0) {\n        uppy.info(`Failed to upload ${result.failed.length} file(s)`, 'error', 5000);\n      }\n    },\n    [uppy]\n  );\n\n  useEffect(() => {\n    uppy.on('file-added', handleFileAdded);\n    uppy.on('upload-success', handleUploadSuccess);\n    uppy.on('complete', handleComplete);\n\n    return () => {\n      uppy.off('file-added', handleFileAdded);\n      uppy.off('upload-success', handleUploadSuccess);\n      uppy.off('complete', handleComplete);\n      // CRITICAL FIX: Cleanup Uppy instance to prevent memory leaks\n      if ('close' in uppy && typeof uppy.close === 'function') {\n        uppy.close();\n      }\n    };\n  }, [uppy, handleFileAdded, handleUploadSuccess, handleComplete]);\n\n  useEffect(() => {\n    setUploadedFiles(value);\n  }, [value]);\n\n  return (\n    <div\n      className=\"multi-image-upload space-y-4\"\n      role=\"region\"\n      aria-label=\"Image and video file upload\"\n    >\n      {/* Live region for screen reader announcements */}\n      <div role=\"status\" aria-live=\"polite\" aria-atomic=\"true\" className=\"sr-only\">\n        {uploadStatus}\n      </div>\n\n      <Dashboard\n        uppy={uppy}\n        plugins={['Webcam']}\n        proudlyDisplayPoweredByUppy={false}\n        hideProgressDetails={false}\n        note={`Upload up to ${maxFiles} images/videos (max 10MB each)`}\n        height={450}\n        theme=\"dark\"\n      />\n\n      {uploadedFiles.length > 0 && (\n        <div className=\"mt-6\" role=\"list\" aria-label=\"Uploaded files\">\n          <h3 className=\"text-lg font-semibold text-gray-200 mb-4\" id=\"uploaded-files-heading\">\n            Uploaded Files ({uploadedFiles.length})\n          </h3>\n          <div\n            className=\"grid grid-cols-2 md:grid-cols-4 gap-4\"\n            aria-labelledby=\"uploaded-files-heading\"\n          >\n            {uploadedFiles.map((file, idx) => (\n              <div\n                key={idx}\n                role=\"listitem\"\n                tabIndex={0}\n                aria-label={`${file.name}, ${(file.size / 1024).toFixed(1)} kilobytes`}\n                className=\"bg-gray-800 rounded-lg p-3 space-y-2 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 transition-colors\"\n              >\n                <div className=\"text-sm font-medium text-white truncate\">{file.name}</div>\n                <div className=\"text-xs text-gray-300\">\n                  #{file.number} • {(file.size / 1024).toFixed(1)} KB\n                </div>\n                {file.latitude && file.longitude && (\n                  <div className=\"text-xs text-gray-300\">\n                    📍 {file.latitude.toFixed(6)}, {file.longitude.toFixed(6)}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/components/ProgressiveDisclosure.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":10,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":10,"endColumn":38},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":10,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":10,"endColumn":38},{"ruleId":"jsx-a11y/role-supports-aria-props","severity":2,"message":"The attribute aria-expanded is not supported by the role group. This role is implicit on the element details.","line":19,"column":5,"nodeType":"JSXOpeningElement","endLine":24,"endColumn":6},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":66,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":66,"endColumn":29},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":66,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":66,"endColumn":29},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":96,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":96,"endColumn":26},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":96,"column":8,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":96,"endColumn":26}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { type ReactNode, useState } from 'react';\n\nexport interface ProgressiveDisclosureProps {\n  title: string;\n  children: ReactNode;\n  defaultOpen?: boolean;\n  className?: string;\n}\n\nexport function ProgressiveDisclosure({\n  title,\n  children,\n  defaultOpen = false,\n  className = ''\n}: ProgressiveDisclosureProps) {\n  const [isOpen, setIsOpen] = useState(defaultOpen);\n\n  return (\n    <details\n      open={defaultOpen}\n      className={`group ${className}`}\n      onToggle={e => setIsOpen((e.target as HTMLDetailsElement).open)}\n      aria-expanded={isOpen}\n    >\n      <summary\n        className=\"flex cursor-pointer items-center justify-between rounded-lg bg-gray-800 p-4 text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 transition-colors\"\n        tabIndex={0}\n        onKeyDown={e => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault();\n            setIsOpen(!isOpen);\n          }\n        }}\n        aria-label={`${isOpen ? 'Collapse' : 'Expand'} ${title}`}\n      >\n        <span className=\"font-medium text-base\">{title}</span>\n        <svg\n          className={`h-5 w-5 transition-transform duration-300 ${isOpen ? 'rotate-180' : ''}`}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </summary>\n\n      <div\n        className=\"mt-2 space-y-2 px-4 pb-4 animate-fadeIn\"\n        role=\"region\"\n        aria-label={`${title} content`}\n      >\n        {children}\n      </div>\n    </details>\n  );\n}\n\nexport interface CheckboxItemProps {\n  label: string;\n  value: string;\n  checked: boolean;\n  onChange: (checked: boolean) => void;\n}\n\nexport function CheckboxItem({ label, value, checked, onChange }: CheckboxItemProps) {\n  return (\n    <label\n      className=\"flex items-center space-x-3 p-3 rounded-lg hover:bg-gray-700 cursor-pointer transition-colors min-h-[48px]\"\n      aria-label={label}\n    >\n      <input\n        type=\"checkbox\"\n        value={value}\n        checked={checked}\n        onChange={e => onChange(e.target.checked)}\n        className=\"h-5 w-5 min-h-[48px] min-w-[48px] rounded border-gray-600 text-blue-600 focus:ring-2 focus:ring-blue-500 focus:ring-offset-0 focus:ring-offset-gray-900 transition-all\"\n        aria-checked={checked}\n        aria-describedby={`${value}-description`}\n      />\n      <span className=\"text-white text-base\" id={`${value}-description`}>\n        {label}\n      </span>\n    </label>\n  );\n}\n\nexport interface RadioItemProps {\n  label: string;\n  value: string;\n  checked: boolean;\n  onChange: () => void;\n  name: string;\n}\n\nexport function RadioItem({ label, value, checked, onChange, name }: RadioItemProps) {\n  return (\n    <label\n      className={`flex items-center p-4 rounded-lg cursor-pointer transition-colors min-h-[48px] focus-within:ring-2 focus-within:ring-blue-500 focus-within:ring-offset-2 focus-within:ring-offset-gray-900 ${\n        checked ? 'bg-blue-600 text-white' : 'bg-gray-800 hover:bg-gray-700 text-white'\n      }`}\n      aria-label={label}\n    >\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={onChange}\n        className=\"sr-only\"\n        aria-checked={checked}\n      />\n      <span className=\"font-medium text-base\">{label}</span>\n    </label>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/config/uppy-config.ts","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":82,"column":69,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":82,"endColumn":71},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":82,"column":69,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":82,"endColumn":71},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":96,"column":63,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":96,"endColumn":65},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":96,"column":63,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":96,"endColumn":65},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":112,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":112,"endColumn":41},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":112,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":112,"endColumn":41},{"ruleId":"@typescript-eslint/consistent-type-imports","severity":2,"message":"`import()` type annotations are forbidden.","line":126,"column":16,"nodeType":"TSImportType","messageId":"noImportTypeAnnotations","endLine":126,"endColumn":41},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":128,"column":3,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":128,"endColumn":5},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":128,"column":3,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":128,"endColumn":5}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Uppy Configuration for TUS File Uploads\n *\n * This configuration file contains all settings for Uppy file uploads\n * with TUS protocol integration for resumable uploads.\n */\n\nexport interface UppyConfigOptions {\n  /**\n   * TUS server endpoint URL\n   * Default: http://localhost:1080/files/\n   */\n  tusEndpoint?: string;\n\n  /**\n   * Maximum file size in bytes\n   * Default: 100MB\n   */\n  maxFileSize?: number;\n\n  /**\n   * Maximum number of files\n   * Default: 10\n   */\n  maxNumberOfFiles?: number;\n\n  /**\n   * Allowed file types (MIME types or extensions)\n   * Default: null (all types allowed)\n   */\n  allowedFileTypes?: string[] | null;\n\n  /**\n   * Minimum number of files required\n   * Default: null (no minimum)\n   */\n  minNumberOfFiles?: number | null;\n\n  /**\n   * Retry delays for failed uploads (in milliseconds)\n   * Default: [0, 1000, 3000, 5000]\n   */\n  retryDelays?: number[];\n\n  /**\n   * Auto-proceed after file selection\n   * Default: false\n   */\n  autoProceed?: boolean;\n\n  /**\n   * Allow multiple uploads\n   * Default: true\n   */\n  allowMultipleUploads?: boolean;\n\n  /**\n   * Debug mode for Uppy\n   * Default: false (true in development)\n   */\n  debug?: boolean;\n}\n\n/**\n * Default Uppy configuration for TUS uploads\n */\nexport const defaultUppyConfig: Required<UppyConfigOptions> = {\n  tusEndpoint: 'http://localhost:1080/files/',\n  maxFileSize: 100 * 1024 * 1024, // 100MB\n  maxNumberOfFiles: 10,\n  allowedFileTypes: null, // Allow all file types\n  minNumberOfFiles: null,\n  retryDelays: [0, 1000, 3000, 5000],\n  autoProceed: false,\n  allowMultipleUploads: true,\n  debug: process.env.NODE_ENV === 'development'\n};\n\n/**\n * Uppy restrictions object\n */\nexport const getUppyRestrictions = (config: UppyConfigOptions = {}) => {\n  const mergedConfig = { ...defaultUppyConfig, ...config };\n\n  return {\n    maxFileSize: mergedConfig.maxFileSize,\n    maxNumberOfFiles: mergedConfig.maxNumberOfFiles,\n    minNumberOfFiles: mergedConfig.minNumberOfFiles,\n    allowedFileTypes: mergedConfig.allowedFileTypes\n  };\n};\n\n/**\n * TUS plugin options\n */\nexport const getTusOptions = (config: UppyConfigOptions = {}) => {\n  const mergedConfig = { ...defaultUppyConfig, ...config };\n\n  return {\n    endpoint: mergedConfig.tusEndpoint,\n    retryDelays: mergedConfig.retryDelays,\n    // Additional TUS-specific options\n    chunkSize: 5 * 1024 * 1024, // 5MB chunks\n    removeFingerprintOnSuccess: true,\n    withCredentials: false\n  };\n};\n\n/**\n * Uppy Dashboard UI options\n */\nexport const getDashboardOptions = () => ({\n  inline: true,\n  height: 400,\n  width: '100%',\n  showProgressDetails: true,\n  note: 'Upload files using resumable TUS protocol',\n  proudlyDisplayPoweredByUppy: false,\n  theme: 'light'\n});\n\n/**\n * Create Uppy instance with TUS configuration\n */\nexport const createUppyInstance = (\n  Uppy: typeof import('@uppy/core').Uppy,\n  config: UppyConfigOptions = {}\n) => {\n  const mergedConfig = { ...defaultUppyConfig, ...config };\n\n  return new Uppy({\n    debug: mergedConfig.debug,\n    autoProceed: mergedConfig.autoProceed,\n    allowMultipleUploads: mergedConfig.allowMultipleUploads,\n    restrictions: getUppyRestrictions(config),\n    meta: {\n      source: 'formio-tus-uploader'\n    }\n  });\n};\n\n/**\n * File type presets for common use cases\n */\nexport const FILE_TYPE_PRESETS = {\n  images: ['image/*'],\n  documents: ['.pdf', '.doc', '.docx', '.txt', '.rtf'],\n  spreadsheets: ['.xls', '.xlsx', '.csv'],\n  presentations: ['.ppt', '.pptx'],\n  archives: ['.zip', '.rar', '.7z', '.tar', '.gz'],\n  videos: ['video/*'],\n  audio: ['audio/*'],\n  all: null\n} as const;\n\n/**\n * Size presets for common use cases\n */\nexport const SIZE_PRESETS = {\n  small: 10 * 1024 * 1024, // 10MB\n  medium: 50 * 1024 * 1024, // 50MB\n  large: 100 * 1024 * 1024, // 100MB\n  xlarge: 500 * 1024 * 1024, // 500MB\n  xxlarge: 1024 * 1024 * 1024 // 1GB\n} as const;\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/main.tsx","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module '@qrius/formio-react/css'.","line":8,"column":8,"nodeType":"Literal","endLine":8,"endColumn":33},{"ruleId":"import/order","severity":2,"message":"`@qrius/formio-react` import should occur before import of `react`","line":18,"column":1,"nodeType":"ImportDeclaration","endLine":18,"endColumn":58},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":42,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":42,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1394,1449],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":43,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":43,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1450,1532],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":44,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":44,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1533,1626],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":45,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":45,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1627,1726],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":50,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":50,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1953,2049],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":52,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":52,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2102,2168],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"import/no-named-as-default-member","severity":1,"message":"Caution: `ReactDOM` also has a named export `createRoot`. Check if you meant to write `import {createRoot} from 'react-dom/client'` instead.","line":57,"column":1,"nodeType":"MemberExpression","endLine":57,"endColumn":20},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":2,"message":"Forbidden non-null assertion.","line":57,"column":21,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":57,"endColumn":53}],"suppressedMessages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"Formio.use\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","line":35,"column":1,"nodeType":"MemberExpression","endLine":35,"endColumn":11,"suppressions":[{"kind":"directive","justification":"Formio.use() is NOT a React Hook, it's Form.io plugin registration"}]}],"errorCount":3,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App.tsx';\nimport './index.css';\n\n// Import Form.io CSS\nimport '@qrius/formio-react/css';\n\n// Import Form.io Dark Mode Override\nimport './formio-dark.css';\n\n// Import Whitelabel CSS (hides Form.io branding)\nimport './whitelabel.css';\n\n// Register Form.io File Upload Module\n// CRITICAL: Import from @qrius/formio-react to use the SAME Components registry!\nimport { Formio, Components } from '@qrius/formio-react';\n\nimport { MultiImageUpload } from './components/MultiImageUpload';\nimport FormioFileUploadModule, {\n  MultiImageUploadComponent\n} from '../../packages/formio-file-upload/src/index';\n\n// CRITICAL: Register React component factory BEFORE Formio.use()\n// This enables the Form.io adapter to load the React component at runtime\nMultiImageUploadComponent.registerReactComponent(() => ({\n  React,\n  ReactDOM,\n  MultiImageUpload\n}));\n\n// Register module with Form.io\n// eslint-disable-next-line react-hooks/rules-of-hooks -- Formio.use() is NOT a React Hook, it's Form.io plugin registration\nFormio.use(FormioFileUploadModule);\n\n// REQUIRED: Explicit component registration for Form.io's component loader\n// Module registration alone doesn't make custom components discoverable\n(Components as any).setComponent('multiimageupload', MultiImageUploadComponent);\n\n// Debug: Verify component registration\nconsole.log('✅ MultiImageUpload component registered');\nconsole.log('Available components:', Object.keys((Components as any).components));\nconsole.log('multiimageupload registered?', (Components as any).components.multiimageupload);\nconsole.log('React factory registered?', MultiImageUploadComponent.reactComponentFactory !== null);\n\n// CRITICAL: Hook into Components.create to see if multiimageupload is being instantiated\nconst originalCreate = (Components as any).create;\n(Components as any).create = function (component: any, options: any, data: any) {\n  console.log('🔍 Components.create() called for type:', component?.type, 'key:', component?.key);\n  if (component?.type === 'multiimageupload') {\n    console.log('🎯 CREATING multiimageupload component!', component);\n  }\n  return originalCreate.call(this, component, options, data);\n};\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/pages/FormViewer.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/pages/FormViewer.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":157,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":157,"endColumn":35},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":157,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":157,"endColumn":35},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":166,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":166,"endColumn":31},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":178,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":178,"endColumn":44},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":183,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":183,"endColumn":39},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":188,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":188,"endColumn":26},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":193,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":193,"endColumn":31},{"ruleId":"sonarjs/no-duplicate-string","severity":1,"message":"Define a constant instead of duplicating this literal 3 times.","line":225,"column":24,"nodeType":"Literal","endLine":225,"endColumn":51},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":255,"column":17,"nodeType":"JSXOpeningElement","endLine":262,"endColumn":18}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Form } from '@qrius/formio-react';\nimport { useState } from 'react';\n\nimport specialistReportForm from '../forms/specialist-report.json';\n\nimport type { Submission } from '@qrius/formio-react';\n\n\n// Sample form definitions\nconst SAMPLE_FORMS = {\n  specialistReport: specialistReportForm,\n  simple: {\n    display: 'form',\n    components: [\n      {\n        type: 'textfield',\n        key: 'firstName',\n        label: 'First Name',\n        placeholder: 'Enter your first name',\n        validate: { required: true }\n      },\n      {\n        type: 'textfield',\n        key: 'lastName',\n        label: 'Last Name',\n        placeholder: 'Enter your last name',\n        validate: { required: true }\n      },\n      {\n        type: 'email',\n        key: 'email',\n        label: 'Email',\n        placeholder: 'your.email@example.com',\n        validate: { required: true }\n      },\n      {\n        type: 'button',\n        action: 'submit',\n        label: 'Submit',\n        theme: 'primary'\n      }\n    ]\n  },\n  contact: {\n    display: 'form',\n    components: [\n      {\n        type: 'panel',\n        title: 'Contact Information',\n        key: 'contactPanel',\n        components: [\n          {\n            type: 'textfield',\n            key: 'fullName',\n            label: 'Full Name',\n            placeholder: 'John Doe',\n            validate: { required: true }\n          },\n          {\n            type: 'email',\n            key: 'email',\n            label: 'Email Address',\n            placeholder: 'john@example.com',\n            validate: { required: true }\n          },\n          {\n            type: 'phoneNumber',\n            key: 'phone',\n            label: 'Phone Number',\n            placeholder: '(555) 123-4567',\n            validate: { required: false }\n          },\n          {\n            type: 'textarea',\n            key: 'message',\n            label: 'Message',\n            placeholder: 'Your message here...',\n            rows: 5,\n            validate: { required: true, minLength: 10 }\n          }\n        ]\n      },\n      {\n        type: 'button',\n        action: 'submit',\n        label: 'Send Message',\n        theme: 'primary',\n        block: true\n      }\n    ]\n  },\n  survey: {\n    display: 'form',\n    components: [\n      {\n        type: 'panel',\n        title: 'Customer Satisfaction Survey',\n        key: 'surveyPanel',\n        components: [\n          {\n            type: 'radio',\n            key: 'satisfaction',\n            label: 'How satisfied are you with our service?',\n            values: [\n              { label: 'Very Satisfied', value: '5' },\n              { label: 'Satisfied', value: '4' },\n              { label: 'Neutral', value: '3' },\n              { label: 'Dissatisfied', value: '2' },\n              { label: 'Very Dissatisfied', value: '1' }\n            ],\n            validate: { required: true }\n          },\n          {\n            type: 'selectboxes',\n            key: 'features',\n            label: 'Which features do you use most? (Select all that apply)',\n            values: [\n              { label: 'Forms', value: 'forms' },\n              { label: 'File Upload', value: 'upload' },\n              { label: 'Validation', value: 'validation' },\n              { label: 'API Integration', value: 'api' }\n            ]\n          },\n          {\n            type: 'select',\n            key: 'frequency',\n            label: 'How often do you use our service?',\n            data: {\n              values: [\n                { label: 'Daily', value: 'daily' },\n                { label: 'Weekly', value: 'weekly' },\n                { label: 'Monthly', value: 'monthly' },\n                { label: 'Rarely', value: 'rarely' }\n              ]\n            },\n            validate: { required: true }\n          },\n          {\n            type: 'checkbox',\n            key: 'recommend',\n            label: 'Would you recommend us to others?',\n            validate: { required: true }\n          }\n        ]\n      },\n      {\n        type: 'button',\n        action: 'submit',\n        label: 'Submit Survey',\n        theme: 'primary',\n        block: true\n      }\n    ]\n  }\n};\n\nexport default function FormViewer() {\n  const [selectedForm, setSelectedForm] = useState<string>('specialistReport');\n  const [customJson, setCustomJson] = useState<string>('');\n  const [useCustom, setUseCustom] = useState<boolean>(false);\n  const [submission, setSubmission] = useState<Submission | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [useServerMode, setUseServerMode] = useState<boolean>(false);\n  const [formioServerUrl, setFormioServerUrl] = useState<string>('http://localhost:3001');\n\n  const getCurrentForm = () => {\n    if (useCustom && customJson) {\n      try {\n        return JSON.parse(customJson);\n      } catch {\n        setError('Invalid JSON format');\n        return SAMPLE_FORMS[selectedForm as keyof typeof SAMPLE_FORMS];\n      }\n    }\n    return SAMPLE_FORMS[selectedForm as keyof typeof SAMPLE_FORMS];\n  };\n\n  const handleSubmit = (sub: Submission) => {\n    setSubmission(sub);\n    setError(null);\n  };\n\n  const handleError = (errors: any) => {\n    console.error('Form errors:', errors);\n    setError('Form validation failed. Please check all required fields.');\n  };\n\n  const resetForm = () => {\n    setSubmission(null);\n    setError(null);\n  };\n\n  const loadCustomJson = () => {\n    const form = SAMPLE_FORMS[selectedForm as keyof typeof SAMPLE_FORMS];\n    setCustomJson(JSON.stringify(form, null, 2));\n  };\n\n  return (\n    <div style={{ maxWidth: '900px', margin: '2rem auto', padding: '1rem' }}>\n      {/* Header */}\n      <div\n        style={{\n          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n          color: 'white',\n          padding: '2rem',\n          borderRadius: '12px',\n          marginBottom: '2rem',\n          boxShadow: '0 4px 6px rgba(0,0,0,0.1)'\n        }}\n      >\n        <h1 style={{ margin: '0 0 0.5rem 0', fontSize: '2rem' }}>📋 Form.io Client Viewer</h1>\n        <p style={{ margin: 0, opacity: 0.9 }}>\n          Simple web client for viewing and interacting with Form.io forms (no backend required)\n        </p>\n      </div>\n\n      {/* Form Selector */}\n      {!submission && (\n        <div\n          style={{\n            background: 'white',\n            padding: '1.5rem',\n            borderRadius: '8px',\n            marginBottom: '1.5rem',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}\n        >\n          <h2 style={{ marginTop: 0 }}>Configuration</h2>\n\n          {/* Server Mode Toggle */}\n          <div\n            style={{\n              marginBottom: '1.5rem',\n              padding: '1rem',\n              background: '#f5f5f5',\n              borderRadius: '6px'\n            }}\n          >\n            <label style={{ display: 'flex', alignItems: 'center', marginBottom: '0.5rem' }}>\n              <input\n                type=\"checkbox\"\n                checked={useServerMode}\n                onChange={e => setUseServerMode(e.target.checked)}\n                style={{ marginRight: '0.5rem' }}\n              />\n              <strong>Server Submission Mode</strong>\n            </label>\n            <p style={{ margin: '0.5rem 0', fontSize: '0.875rem', color: '#666' }}>\n              {useServerMode\n                ? '✅ Forms will be submitted to Form.io server'\n                : '⚠️ Client-side only (no server submission)'}\n            </p>\n            {useServerMode && (\n              <div style={{ marginTop: '0.75rem' }}>\n                <label\n                  style={{\n                    display: 'block',\n                    marginBottom: '0.25rem',\n                    fontSize: '0.875rem',\n                    fontWeight: 'bold'\n                  }}\n                >\n                  Form.io Server URL:\n                </label>\n                <input\n                  type=\"text\"\n                  value={formioServerUrl}\n                  onChange={e => setFormioServerUrl(e.target.value)}\n                  placeholder=\"http://localhost:3001\"\n                  style={{\n                    width: '100%',\n                    padding: '0.5rem',\n                    borderRadius: '4px',\n                    border: '1px solid #ccc',\n                    fontSize: '0.875rem',\n                    fontFamily: 'monospace'\n                  }}\n                />\n              </div>\n            )}\n          </div>\n\n          <h3 style={{ marginTop: 0 }}>Select Form</h3>\n\n          <div style={{ marginBottom: '1rem' }}>\n            <label style={{ display: 'flex', alignItems: 'center', marginBottom: '0.5rem' }}>\n              <input\n                type=\"radio\"\n                name=\"formType\"\n                checked={!useCustom}\n                onChange={() => setUseCustom(false)}\n                style={{ marginRight: '0.5rem' }}\n              />\n              <strong>Use Sample Form</strong>\n            </label>\n\n            {!useCustom && (\n              <select\n                value={selectedForm}\n                onChange={e => setSelectedForm(e.target.value)}\n                style={{\n                  width: '100%',\n                  padding: '0.75rem',\n                  borderRadius: '6px',\n                  border: '2px solid #e0e0e0',\n                  fontSize: '1rem',\n                  marginLeft: '1.5rem'\n                }}\n              >\n                <option value=\"specialistReport\">\n                  Specialist Report (38 fields with image uploads)\n                </option>\n                <option value=\"simple\">Simple Form (Name & Email)</option>\n                <option value=\"contact\">Contact Form (Panel with Phone & Message)</option>\n                <option value=\"survey\">Survey Form (Radio, Checkbox, Select)</option>\n              </select>\n            )}\n          </div>\n\n          <div style={{ marginBottom: '1rem' }}>\n            <label style={{ display: 'flex', alignItems: 'center', marginBottom: '0.5rem' }}>\n              <input\n                type=\"radio\"\n                name=\"formType\"\n                checked={useCustom}\n                onChange={() => setUseCustom(true)}\n                style={{ marginRight: '0.5rem' }}\n              />\n              <strong>Use Custom JSON</strong>\n            </label>\n\n            {useCustom && (\n              <>\n                <button\n                  onClick={loadCustomJson}\n                  style={{\n                    padding: '0.5rem 1rem',\n                    borderRadius: '6px',\n                    border: 'none',\n                    background: '#667eea',\n                    color: 'white',\n                    cursor: 'pointer',\n                    marginBottom: '0.5rem',\n                    marginLeft: '1.5rem'\n                  }}\n                >\n                  Load Selected Sample as Template\n                </button>\n                <textarea\n                  value={customJson}\n                  onChange={e => setCustomJson(e.target.value)}\n                  placeholder='Paste your Form.io JSON here...\\n\\nExample:\\n{\\n  \"display\": \"form\",\\n  \"components\": [\\n    { \"type\": \"textfield\", \"key\": \"name\", \"label\": \"Name\" }\\n  ]\\n}'\n                  style={{\n                    width: '100%',\n                    minHeight: '200px',\n                    padding: '0.75rem',\n                    borderRadius: '6px',\n                    border: '2px solid #e0e0e0',\n                    fontSize: '0.875rem',\n                    fontFamily: 'monospace',\n                    marginLeft: '1.5rem'\n                  }}\n                />\n              </>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Error Display */}\n      {error && (\n        <div\n          style={{\n            background: '#ffebee',\n            color: '#c62828',\n            padding: '1rem',\n            borderRadius: '6px',\n            marginBottom: '1rem',\n            border: '2px solid #ef5350'\n          }}\n        >\n          ⚠️ {error}\n        </div>\n      )}\n\n      {/* Form Renderer */}\n      {!submission && (\n        <div\n          style={{\n            background: 'white',\n            padding: '2rem',\n            borderRadius: '8px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}\n        >\n          <Form\n            form={getCurrentForm()}\n            src=\"\"\n            url={useServerMode ? formioServerUrl : undefined}\n            onSubmit={handleSubmit}\n            onError={handleError}\n            options={{\n              noAlerts: false,\n              readOnly: false\n            }}\n          />\n        </div>\n      )}\n\n      {/* Submission Display */}\n      {submission && (\n        <div>\n          <div\n            style={{\n              background: '#e8f5e9',\n              padding: '1.5rem',\n              borderRadius: '8px',\n              marginBottom: '1.5rem',\n              border: '2px solid #4caf50'\n            }}\n          >\n            <h2 style={{ margin: '0 0 1rem 0', color: '#2e7d32' }}>\n              ✅ Form Submitted Successfully!\n            </h2>\n            <button\n              onClick={resetForm}\n              style={{\n                background: '#4caf50',\n                color: 'white',\n                border: 'none',\n                padding: '0.75rem 1.5rem',\n                borderRadius: '6px',\n                cursor: 'pointer',\n                fontSize: '1rem',\n                fontWeight: 'bold'\n              }}\n            >\n              Submit Another Form\n            </button>\n          </div>\n\n          <div\n            style={{\n              background: 'white',\n              padding: '1.5rem',\n              borderRadius: '8px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n            }}\n          >\n            <h3 style={{ marginTop: 0 }}>📄 Submission Data:</h3>\n            <pre\n              style={{\n                background: '#f5f5f5',\n                padding: '1rem',\n                borderRadius: '6px',\n                overflow: 'auto',\n                fontSize: '0.875rem',\n                lineHeight: '1.5'\n              }}\n            >\n              {JSON.stringify(submission.data, null, 2)}\n            </pre>\n          </div>\n\n          <div\n            style={{\n              background: useServerMode ? '#e3f2fd' : '#fff3e0',\n              padding: '1rem',\n              borderRadius: '6px',\n              marginTop: '1rem',\n              border: useServerMode ? '1px solid #2196f3' : '1px solid #ffb74d'\n            }}\n          >\n            <h4 style={{ margin: '0 0 0.5rem 0', color: useServerMode ? '#1565c0' : '#e65100' }}>\n              💡 Note:\n            </h4>\n            <p style={{ margin: 0, color: '#666' }}>\n              {useServerMode ? (\n                <>\n                  This submission was sent to the Form.io server at <code>{formioServerUrl}</code>.\n                  The data is now stored in MongoDB and can be retrieved via the API.\n                </>\n              ) : (\n                <>\n                  This is a <strong>client-side only</strong> form viewer. No data is sent to any\n                  server. All validation and rendering happens in your browser using\n                  @qrius/formio-react.\n                </>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/pages/MultiImageUploadTest.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":6,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":6,"endColumn":45},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":6,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":6,"endColumn":45},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":9,"column":48,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":9,"endColumn":50},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[392,430],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"react/no-array-index-key","severity":1,"message":"Do not use Array index in keys","line":82,"column":32,"nodeType":"Identifier","messageId":"noArrayIndex","endLine":82,"endColumn":35}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\n\nimport { ErrorBoundary } from '../components/ErrorBoundary';\nimport { MultiImageUpload, type UploadedFile } from '../components/MultiImageUpload';\n\nexport default function MultiImageUploadTest() {\n  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);\n\n  const handleChange = (files: UploadedFile[]) => {\n    setUploadedFiles(files);\n    console.log('Uploaded files:', files);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <header className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">📸 Multi-Image Upload Test</h1>\n          <p className=\"text-gray-400\">\n            Test the Uppy 5.0 + TUS multi-image upload component with automatic numbering,\n            compression, and metadata extraction.\n          </p>\n        </header>\n\n        <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Features</h2>\n          <ul className=\"space-y-2 text-gray-300\">\n            <li>✅ Upload up to 20 images/videos</li>\n            <li>✅ TUS resumable uploads (localhost:1080)</li>\n            <li>✅ Automatic numbering (Site Image 1-20)</li>\n            <li>✅ 60% image compression (1920x1080 max)</li>\n            <li>✅ EXIF metadata extraction (geolocation)</li>\n            <li>✅ File validation (magic numbers)</li>\n            <li>✅ Filename sanitization</li>\n            <li>✅ Offline support (24h cache)</li>\n            <li>✅ Webcam capture</li>\n            <li>✅ WCAG 2.1 AA accessible</li>\n          </ul>\n        </div>\n\n        <ErrorBoundary>\n          <MultiImageUpload\n            formKey=\"site_images\"\n            maxFiles={20}\n            compressionQuality={0.8}\n            autoNumbering\n            extractMetadata\n            onChange={handleChange}\n            value={uploadedFiles}\n          />\n        </ErrorBoundary>\n\n        {uploadedFiles.length > 0 && (\n          <div className=\"mt-8 bg-gray-800 rounded-lg p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">\n              📊 Upload Summary ({uploadedFiles.length} files)\n            </h2>\n            <div className=\"space-y-4\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-700\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase\">\n                        #\n                      </th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase\">\n                        Name\n                      </th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase\">\n                        Size\n                      </th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase\">\n                        Location\n                      </th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-400 uppercase\">\n                        Timestamp\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-700\">\n                    {uploadedFiles.map((file, idx) => (\n                      <tr key={idx}>\n                        <td className=\"px-4 py-2 text-sm text-gray-300\">{file.number}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-300 truncate max-w-xs\">\n                          {file.name}\n                        </td>\n                        <td className=\"px-4 py-2 text-sm text-gray-300\">\n                          {(file.size / 1024).toFixed(1)} KB\n                        </td>\n                        <td className=\"px-4 py-2 text-sm text-gray-300\">\n                          {file.latitude && file.longitude\n                            ? `${file.latitude.toFixed(6)}, ${file.longitude.toFixed(6)}`\n                            : 'N/A'}\n                        </td>\n                        <td className=\"px-4 py-2 text-sm text-gray-300\">\n                          {new Date(file.timestamp).toLocaleString()}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n\n              <div className=\"mt-6\">\n                <h3 className=\"text-lg font-semibold mb-2\">JSON Output</h3>\n                <pre className=\"bg-gray-900 rounded p-4 overflow-x-auto text-xs\">\n                  {JSON.stringify(uploadedFiles, null, 2)}\n                </pre>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"mt-8 bg-gray-800 rounded-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">🚀 Technical Details</h2>\n          <dl className=\"space-y-2 text-sm\">\n            <div>\n              <dt className=\"font-semibold text-gray-300\">TUS Server:</dt>\n              <dd className=\"text-gray-400\">http://localhost:1080/files/</dd>\n            </div>\n            <div>\n              <dt className=\"font-semibold text-gray-300\">Chunk Size:</dt>\n              <dd className=\"text-gray-400\">5MB</dd>\n            </div>\n            <div>\n              <dt className=\"font-semibold text-gray-300\">Compression:</dt>\n              <dd className=\"text-gray-400\">80% quality, max 1920x1080px</dd>\n            </div>\n            <div>\n              <dt className=\"font-semibold text-gray-300\">Retry Strategy:</dt>\n              <dd className=\"text-gray-400\">0ms, 1s, 3s, 5s</dd>\n            </div>\n            <div>\n              <dt className=\"font-semibold text-gray-300\">Offline Cache:</dt>\n              <dd className=\"text-gray-400\">24 hours with Service Worker</dd>\n            </div>\n          </dl>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/types/formio.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/utils/animations.ts","messages":[{"ruleId":"sonarjs/no-duplicate-string","severity":1,"message":"Define a constant instead of duplicating this literal 4 times.","line":14,"column":32,"nodeType":"Literal","endLine":14,"endColumn":47}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface AnimationOptions {\n  duration?: number;\n  easing?: string;\n  delay?: number;\n  fill?: FillMode;\n}\n\nexport function fadeIn(element: HTMLElement, options: AnimationOptions = {}): Animation {\n  const { duration = 300, easing = 'ease-out', delay = 0, fill = 'forwards' } = options;\n\n  return element.animate(\n    [\n      { opacity: 0, transform: 'translateY(20px)' },\n      { opacity: 1, transform: 'translateY(0)' }\n    ],\n    {\n      duration,\n      easing,\n      delay,\n      fill\n    }\n  );\n}\n\nexport function slideDown(element: HTMLElement, options: AnimationOptions = {}): Animation {\n  const { duration = 300, easing = 'ease-out', delay = 0, fill = 'forwards' } = options;\n\n  const startHeight = 0;\n  const endHeight = element.scrollHeight;\n\n  return element.animate(\n    [\n      {\n        height: `${startHeight}px`,\n        opacity: 0,\n        transform: 'translateY(-10px)'\n      },\n      { height: `${endHeight}px`, opacity: 1, transform: 'translateY(0)' }\n    ],\n    {\n      duration,\n      easing,\n      delay,\n      fill\n    }\n  );\n}\n\nexport function slideUp(element: HTMLElement, options: AnimationOptions = {}): Animation {\n  const { duration = 300, easing = 'ease-in', delay = 0, fill = 'forwards' } = options;\n\n  const startHeight = element.scrollHeight;\n  const endHeight = 0;\n\n  return element.animate(\n    [\n      { height: `${startHeight}px`, opacity: 1, transform: 'translateY(0)' },\n      {\n        height: `${endHeight}px`,\n        opacity: 0,\n        transform: 'translateY(-10px)'\n      }\n    ],\n    {\n      duration,\n      easing,\n      delay,\n      fill\n    }\n  );\n}\n\nexport function scaleIn(element: HTMLElement, options: AnimationOptions = {}): Animation {\n  const { duration = 200, easing = 'ease-out', delay = 0, fill = 'forwards' } = options;\n\n  return element.animate(\n    [\n      { opacity: 0, transform: 'scale(0.95)' },\n      { opacity: 1, transform: 'scale(1)' }\n    ],\n    {\n      duration,\n      easing,\n      delay,\n      fill\n    }\n  );\n}\n\nexport function checkPop(element: HTMLElement, options: AnimationOptions = {}): Animation {\n  const { duration = 200, easing = 'ease-out', delay = 0, fill = 'forwards' } = options;\n\n  return element.animate(\n    [{ transform: 'scale(1)' }, { transform: 'scale(1.1)' }, { transform: 'scale(1)' }],\n    {\n      duration,\n      easing,\n      delay,\n      fill\n    }\n  );\n}\n\nexport function fadeOut(element: HTMLElement, options: AnimationOptions = {}): Animation {\n  const { duration = 300, easing = 'ease-in', delay = 0, fill = 'forwards' } = options;\n\n  return element.animate(\n    [\n      { opacity: 1, transform: 'translateY(0)' },\n      { opacity: 0, transform: 'translateY(-20px)' }\n    ],\n    {\n      duration,\n      easing,\n      delay,\n      fill\n    }\n  );\n}\n\nexport function observeIntersection(\n  elements: NodeListOf<Element> | Element[],\n  callback: (element: Element, isIntersecting: boolean) => void,\n  options: IntersectionObserverInit = {}\n): IntersectionObserver {\n  const observer = new IntersectionObserver(entries => {\n    for (const entry of entries) {\n      callback(entry.target, entry.isIntersecting);\n    }\n  }, options);\n\n  for (const el of elements) observer.observe(el);\n\n  return observer;\n}\n\nexport function animateOnScroll(\n  selector: string,\n  animationFn: (el: HTMLElement) => Animation,\n  threshold = 0.1\n): IntersectionObserver {\n  const elements = document.querySelectorAll(selector);\n\n  return observeIntersection(\n    elements,\n    (element, isIntersecting) => {\n      if (isIntersecting) {\n        animationFn(element as HTMLElement);\n      }\n    },\n    { threshold }\n  );\n}\n\nexport function staggeredFadeIn(\n  elements: NodeListOf<Element> | Element[],\n  staggerDelay = 100,\n  options: AnimationOptions = {}\n): Animation[] {\n  return Array.from(elements).map((el, index) => {\n    return fadeIn(el as HTMLElement, {\n      ...options,\n      delay: index * staggerDelay\n    });\n  });\n}\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]},{"filePath":"/Users/mishal/code/worktrees/formio-monorepo-20251009/form-client-web-app/src/utils/logger.ts","messages":[{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":9,"column":3,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":9,"endColumn":10},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":16,"column":3,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":16,"endColumn":9},{"ruleId":"@typescript-eslint/explicit-module-boundary-types","severity":1,"message":"Missing return type on function.","line":22,"column":3,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":22,"endColumn":9},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":24,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":24,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[661,696],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Production-safe logger utility\n * Prevents sensitive data leakage via console in production\n */\n\nconst isDevelopment = typeof import.meta !== 'undefined' && (import.meta as any).env?.DEV === true;\n\nexport const logger = {\n  error: (msg: string, meta?: Record<string, any>) => {\n    if (isDevelopment) {\n      console.error(`[ERROR] ${msg}`, meta);\n    }\n    // TODO: Send to error tracking service in production (Sentry, etc.)\n  },\n\n  warn: (msg: string, meta?: Record<string, any>) => {\n    if (isDevelopment) {\n      console.warn(`[WARN] ${msg}`, meta);\n    }\n  },\n\n  info: (msg: string, meta?: Record<string, any>) => {\n    if (isDevelopment) {\n      console.log(`[INFO] ${msg}`, meta);\n    }\n  }\n};\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]}]}]
