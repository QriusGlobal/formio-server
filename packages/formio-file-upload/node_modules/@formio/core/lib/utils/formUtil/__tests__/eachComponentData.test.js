"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const eachComponentData_1 = require("../eachComponentData");
describe('eachComponentData', function () {
    it('Should not iterate over each component in a nested component if includeAll=false and there is an empty data', function () {
        const components = [
            {
                type: 'datagrid',
                key: 'dataGrid',
                label: 'Data Grid',
                input: true,
                components: [
                    {
                        key: 'textField',
                        type: 'textfield',
                        label: 'Text Field',
                        input: true,
                    },
                ],
            },
        ];
        const data = { dataGrid: [] };
        const rowResults = new Map();
        (0, eachComponentData_1.eachComponentData)(components, data, (component, data, row, path) => {
            rowResults.set(path, component.key);
        }, false);
        (0, chai_1.expect)(rowResults.size).to.equal(1);
        (0, chai_1.expect)(rowResults.get('dataGrid')).to.deep.equal('dataGrid');
    });
    it('Should iterate over each component in a nested component if there is no data associated with the component', function () {
        const components = [
            {
                type: 'datagrid',
                key: 'dataGrid',
                label: 'Data Grid',
                input: true,
                components: [
                    {
                        key: 'textField',
                        type: 'textfield',
                        label: 'Text Field',
                        input: true,
                    },
                    {
                        key: 'number',
                        type: 'number',
                        label: 'Number',
                        input: true,
                    },
                ],
            },
        ];
        const data = {};
        const rowResults = new Map();
        (0, eachComponentData_1.eachComponentData)(components, data, (component, data, row, path) => {
            rowResults.set(path, component.key);
        });
        (0, chai_1.expect)(rowResults.size).to.equal(3);
        (0, chai_1.expect)(rowResults.get('dataGrid')).to.deep.equal('dataGrid');
        (0, chai_1.expect)(rowResults.get('dataGrid[0].textField')).to.deep.equal('textField');
        (0, chai_1.expect)(rowResults.get('dataGrid[0].number')).to.deep.equal('number');
    });
    it('Should iterate over each component in a nested component if includeAll=true and there is no data associated with the component', function () {
        const components = [
            {
                type: 'datagrid',
                key: 'dataGrid',
                label: 'Data Grid',
                input: true,
                components: [
                    {
                        key: 'textField',
                        type: 'textfield',
                        label: 'Text Field',
                        input: true,
                    },
                ],
            },
        ];
        const data = {};
        const rowResults = new Map();
        (0, eachComponentData_1.eachComponentData)(components, data, (component, data, row, path) => {
            rowResults.set(path, component.key);
        }, true);
        (0, chai_1.expect)(rowResults.size).to.equal(2);
        (0, chai_1.expect)(rowResults.get('dataGrid')).to.deep.equal('dataGrid');
        (0, chai_1.expect)(rowResults.get('dataGrid[0].textField')).to.deep.equal('textField');
    });
});
