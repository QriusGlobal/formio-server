declare const _default: ({
    type: string;
    conditional: {
        eq: string;
        when: null;
        show: null;
    };
    validate: {
        customPrivate: boolean;
        custom: string;
        pattern: string;
        maxLength: string;
        minLength: string;
        required: boolean;
    };
    persistent: boolean;
    unique: boolean;
    protected: boolean;
    defaultValue: string;
    multiple: boolean;
    suffix: string;
    prefix: string;
    placeholder: string;
    key: string;
    label: string;
    inputMask: string;
    inputType: string;
    tableView: boolean;
    input: boolean;
    lockKey?: undefined;
    components?: undefined;
    legend?: undefined;
    tree?: undefined;
    theme?: undefined;
    disableOnInvalid?: undefined;
    action?: undefined;
    block?: undefined;
    rightIcon?: undefined;
    leftIcon?: undefined;
    size?: undefined;
} | {
    lockKey: boolean;
    key: string;
    conditional: {
        eq: string;
        when: null;
        show: null;
    };
    type: string;
    components: ({
        lockKey: boolean;
        key: string;
        conditional: {
            eq: string;
            when: null;
            show: null;
        };
        type: string;
        columns: {
            components: ({
                type: string;
                conditional: {
                    eq: string;
                    when: null;
                    show: null;
                };
                validate: {
                    customPrivate: boolean;
                    custom: string;
                    pattern: string;
                    maxLength: string;
                    minLength: string;
                    required: boolean;
                };
                persistent: boolean;
                unique: boolean;
                protected: boolean;
                defaultValue: string;
                multiple: boolean;
                suffix: string;
                prefix: string;
                placeholder: string;
                key: string;
                label: string;
                inputMask: string;
                inputType: string;
                tableView: boolean;
                input: boolean;
                components?: undefined;
                tree?: undefined;
            } | {
                conditional: {
                    eq: string;
                    when: null;
                    show: null;
                };
                type: string;
                persistent: boolean;
                protected: boolean;
                key: string;
                label: string;
                tableView: boolean;
                components: {
                    type: string;
                    conditional: {
                        eq: string;
                        when: null;
                        show: null;
                    };
                    validate: {
                        customPrivate: boolean;
                        custom: string;
                        pattern: string;
                        maxLength: string;
                        minLength: string;
                        required: boolean;
                    };
                    persistent: boolean;
                    unique: boolean;
                    protected: boolean;
                    defaultValue: string;
                    multiple: boolean;
                    suffix: string;
                    prefix: string;
                    placeholder: string;
                    key: string;
                    label: string;
                    inputMask: string;
                    inputType: string;
                    tableView: boolean;
                    input: boolean;
                }[];
                tree: boolean;
                input: boolean;
                validate?: undefined;
                unique?: undefined;
                defaultValue?: undefined;
                multiple?: undefined;
                suffix?: undefined;
                prefix?: undefined;
                placeholder?: undefined;
                inputMask?: undefined;
                inputType?: undefined;
            })[];
        }[];
        input: boolean;
        validate?: undefined;
        persistent?: undefined;
        unique?: undefined;
        protected?: undefined;
        defaultValue?: undefined;
        multiple?: undefined;
        suffix?: undefined;
        prefix?: undefined;
        placeholder?: undefined;
        label?: undefined;
        inputMask?: undefined;
        inputType?: undefined;
        tableView?: undefined;
    } | {
        type: string;
        conditional: {
            eq: string;
            when: null;
            show: null;
        };
        validate: {
            customPrivate: boolean;
            custom: string;
            pattern: string;
            maxLength: string;
            minLength: string;
            required: boolean;
        };
        persistent: boolean;
        unique: boolean;
        protected: boolean;
        defaultValue: string;
        multiple: boolean;
        suffix: string;
        prefix: string;
        placeholder: string;
        key: string;
        label: string;
        inputMask: string;
        inputType: string;
        tableView: boolean;
        input: boolean;
        lockKey?: undefined;
        columns?: undefined;
    })[];
    legend: string;
    tableView: boolean;
    input: boolean;
    validate?: undefined;
    persistent?: undefined;
    unique?: undefined;
    protected?: undefined;
    defaultValue?: undefined;
    multiple?: undefined;
    suffix?: undefined;
    prefix?: undefined;
    placeholder?: undefined;
    label?: undefined;
    inputMask?: undefined;
    inputType?: undefined;
    tree?: undefined;
    theme?: undefined;
    disableOnInvalid?: undefined;
    action?: undefined;
    block?: undefined;
    rightIcon?: undefined;
    leftIcon?: undefined;
    size?: undefined;
} | {
    conditional: {
        eq: string;
        when: null;
        show: null;
    };
    type: string;
    persistent: boolean;
    protected: boolean;
    key: string;
    label: string;
    tableView: boolean;
    components: ({
        conditional: {
            eq: string;
            when: null;
            show: null;
        };
        hideLabel: boolean;
        type: string;
        persistent: boolean;
        protected: boolean;
        key: string;
        label: string;
        tableView: boolean;
        components: {
            type: string;
            conditional: {
                eq: string;
                when: null;
                show: null;
            };
            validate: {
                customPrivate: boolean;
                custom: string;
                pattern: string;
                maxLength: string;
                minLength: string;
                required: boolean;
            };
            persistent: boolean;
            unique: boolean;
            protected: boolean;
            defaultValue: string;
            multiple: boolean;
            suffix: string;
            prefix: string;
            placeholder: string;
            key: string;
            label: string;
            inputMask: string;
            inputType: string;
            tableView: boolean;
            input: boolean;
        }[];
        tree: boolean;
        input: boolean;
        validate?: undefined;
        unique?: undefined;
        defaultValue?: undefined;
        multiple?: undefined;
        suffix?: undefined;
        prefix?: undefined;
        placeholder?: undefined;
        inputMask?: undefined;
        inputType?: undefined;
    } | {
        hideLabel: boolean;
        type: string;
        conditional: {
            eq: string;
            when: null;
            show: null;
        };
        validate: {
            customPrivate: boolean;
            custom: string;
            pattern: string;
            maxLength: string;
            minLength: string;
            required: boolean;
        };
        persistent: boolean;
        unique: boolean;
        protected: boolean;
        defaultValue: string;
        multiple: boolean;
        suffix: string;
        prefix: string;
        placeholder: string;
        key: string;
        label: string;
        inputMask: string;
        inputType: string;
        tableView: boolean;
        input: boolean;
        components?: undefined;
        tree?: undefined;
    })[];
    tree: boolean;
    input: boolean;
    validate?: undefined;
    unique?: undefined;
    defaultValue?: undefined;
    multiple?: undefined;
    suffix?: undefined;
    prefix?: undefined;
    placeholder?: undefined;
    inputMask?: undefined;
    inputType?: undefined;
    lockKey?: undefined;
    legend?: undefined;
    theme?: undefined;
    disableOnInvalid?: undefined;
    action?: undefined;
    block?: undefined;
    rightIcon?: undefined;
    leftIcon?: undefined;
    size?: undefined;
} | {
    type: string;
    theme: string;
    disableOnInvalid: boolean;
    action: string;
    block: boolean;
    rightIcon: string;
    leftIcon: string;
    size: string;
    key: string;
    tableView: boolean;
    label: string;
    input: boolean;
    conditional?: undefined;
    validate?: undefined;
    persistent?: undefined;
    unique?: undefined;
    protected?: undefined;
    defaultValue?: undefined;
    multiple?: undefined;
    suffix?: undefined;
    prefix?: undefined;
    placeholder?: undefined;
    inputMask?: undefined;
    inputType?: undefined;
    lockKey?: undefined;
    components?: undefined;
    legend?: undefined;
    tree?: undefined;
} | {
    label: string;
    tableView: boolean;
    key: string;
    type: string;
    input: boolean;
    components: {
        label: string;
        tableView: boolean;
        key: string;
        type: string;
        input: boolean;
    }[];
    conditional?: undefined;
    validate?: undefined;
    persistent?: undefined;
    unique?: undefined;
    protected?: undefined;
    defaultValue?: undefined;
    multiple?: undefined;
    suffix?: undefined;
    prefix?: undefined;
    placeholder?: undefined;
    inputMask?: undefined;
    inputType?: undefined;
    lockKey?: undefined;
    legend?: undefined;
    tree?: undefined;
    theme?: undefined;
    disableOnInvalid?: undefined;
    action?: undefined;
    block?: undefined;
    rightIcon?: undefined;
    leftIcon?: undefined;
    size?: undefined;
})[];
export default _default;
