"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const formUtil_1 = require("../formUtil");
const ConditionOperator_1 = __importDefault(require("./ConditionOperator"));
const lodash_1 = require("lodash");
class IsEqualTo extends ConditionOperator_1.default {
    static get operatorKey() {
        return 'isEqual';
    }
    static get displayedName() {
        return 'Is Equal To';
    }
    execute({ value, comparedValue, conditionComponent }) {
        // special check for select boxes
        if ((conditionComponent === null || conditionComponent === void 0 ? void 0 : conditionComponent.type) === 'selectboxes' && (0, lodash_1.isObject)(value)) {
            return (0, lodash_1.get)(value, comparedValue, false);
        }
        if ((value || value === false) &&
            comparedValue &&
            typeof value !== typeof comparedValue &&
            (0, lodash_1.isString)(comparedValue)) {
            try {
                comparedValue = JSON.parse(comparedValue);
            }
            catch (ignoreErr) {
                // do nothing
            }
        }
        if (conditionComponent &&
            (0, formUtil_1.isSelectResourceWithObjectValue)(conditionComponent) &&
            conditionComponent.template) {
            return (0, formUtil_1.compareSelectResourceWithObjectTypeValues)(value, comparedValue, conditionComponent);
        }
        return (0, lodash_1.isEqual)(value, comparedValue);
    }
}
exports.default = IsEqualTo;
