export declare const coreEnTranslation: {
    month: string;
    day: string;
    year: string;
    january: string;
    february: string;
    march: string;
    april: string;
    may: string;
    june: string;
    july: string;
    august: string;
    september: string;
    october: string;
    november: string;
    december: string;
    yes: string;
    no: string;
    surveyQuestion: string;
    surveyQuestionValue: string;
    complexData: string;
    dots: string;
    unsavedRowsError: string;
    invalidRowsError: string;
    invalidRowError: string;
    invalidOption: string;
    invalidDay: string;
    required: string;
    unique: string;
    array: string;
    array_nonempty: string;
    nonarray: string;
    select: string;
    pattern: string;
    minLength: string;
    maxLength: string;
    minWords: string;
    maxWords: string;
    min: string;
    max: string;
    maxDate: string;
    minDate: string;
    maxYear: string;
    minSelectedCount: string;
    maxSelectedCount: string;
    minYear: string;
    invalid_email: string;
    invalid_url: string;
    invalid_regex: string;
    invalid_date: string;
    invalid_day: string;
    invalidValueProperty: string;
    mask: string;
    valueIsNotAvailable: string;
    time: string;
    invalidDate: string;
    number: string;
    requiredDayField: string;
    requiredMonthField: string;
    requiredYearField: string;
};
type TranslationDictionary = {
    [key: string]: string;
};
export type LanguageResources = {
    [language: string]: {
        translation: TranslationDictionary;
    };
};
export type I18nConfig = {
    lng: string;
    nsSeparator: string;
    keySeparator: string;
    pluralSeparator: string;
    contextSeparator: string;
    resources: LanguageResources;
};
export type LanguagesMap = {
    [language: string]: TranslationDictionary;
};
export type I18nOptions = Partial<I18nConfig> & {
    language?: string;
} & Omit<{
    [language: string]: TranslationDictionary;
}, 'language'>;
export declare const i18nConfig: I18nConfig;
/**
 * This file is used to mimic the i18n library interface.
 */
export declare class I18n {
    static languages: LanguagesMap;
    languages: any;
    defaultKeys: TranslationDictionary;
    language: string;
    currentLanguage: TranslationDictionary;
    constructor(languages?: {});
    static setDefaultTranslations(languages: LanguagesMap): void;
    setLanguages(languages: I18nOptions, noDefaultOverride: boolean): void;
    static init(languages?: {}): I18n;
    dir(lang?: string): "rtl" | "ltr";
    static createInstance(): I18n;
    changeLanguage(language: string, ready?: () => any): void;
    addResourceBundle(language: string, type: string, strings: TranslationDictionary): void;
    t(text: string, data: any, ...args: any[]): any;
}
export {};
