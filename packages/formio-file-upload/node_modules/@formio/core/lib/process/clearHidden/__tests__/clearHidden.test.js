"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const index_1 = require("../index");
describe('clearHidden', function () {
    it('Shoud not clear conditionally hidden component data when clearOnHide is false', function () {
        // Test case data
        const context = {
            component: {
                type: 'textfield',
                key: 'foo',
                clearOnHide: false,
                input: true,
            },
            data: {
                foo: 'bar',
            },
            value: 'foo',
            row: {},
            scope: {
                clearHidden: {},
                conditionals: [
                    {
                        path: 'foo',
                        conditionallyHidden: true,
                    },
                ],
            },
            path: 'foo',
        };
        (0, index_1.clearHiddenProcessSync)(context);
        (0, chai_1.expect)(context.data).to.deep.equal({ foo: 'bar' });
    });
    it('Should clear conditionally hidden component data when clearOnHide is true', function () {
        // Test case data
        const context = {
            component: {
                type: 'textfield',
                key: 'foo',
                clearOnHide: true,
                input: true,
            },
            data: {
                foo: 'bar',
            },
            value: 'foo',
            row: {},
            scope: {
                clearHidden: {},
                conditionals: [
                    {
                        path: 'foo',
                        conditionallyHidden: true,
                    },
                ],
            },
            path: 'foo',
        };
        (0, index_1.clearHiddenProcessSync)(context);
        (0, chai_1.expect)(context.data).to.deep.equal({});
    });
    it('Should not clear component data when the component is intentionally hidden', function () {
        // Test case data
        const context = {
            component: {
                type: 'textfield',
                key: 'foo',
                clearOnHide: true,
                input: true,
                hidden: true,
            },
            data: {
                foo: 'bar',
            },
            value: 'foo',
            row: {},
            scope: {
                clearHidden: {},
            },
            path: 'foo',
        };
        (0, index_1.clearHiddenProcessSync)(context);
        (0, chai_1.expect)(context.data).to.deep.equal({ foo: 'bar' });
    });
});
