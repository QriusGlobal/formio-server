"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.populateProcessInfo = exports.populateProcessSync = void 0;
const lodash_1 = require("lodash");
const formUtil_1 = require("../../utils/formUtil");
// This processor ensures that a "linked" row context is provided to every component.
const populateProcessSync = (context) => {
    const { component, path, scope, value } = context;
    const { data } = scope;
    if (!scope.populated)
        scope.populated = [];
    switch ((0, formUtil_1.getModelType)(component)) {
        case 'nestedArray':
            if (!value || !value.length) {
                const newValue = [{}];
                (0, lodash_1.set)(data, path, newValue);
                scope.row = newValue[0];
                scope.populated.push({
                    path,
                });
            }
            break;
        case 'dataObject':
        case 'object':
            if (!value || typeof value !== 'object') {
                const newValue = {};
                (0, lodash_1.set)(data, value, newValue);
                scope.row = newValue;
                scope.populated.push({
                    path,
                });
            }
            break;
    }
};
exports.populateProcessSync = populateProcessSync;
exports.populateProcessInfo = {
    name: 'populate',
    shouldProcess: () => true,
    processSync: exports.populateProcessSync,
};
