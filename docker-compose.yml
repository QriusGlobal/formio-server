version: '3.8'

# 🎯 Consolidated Docker Compose - Single Source of Truth
# Replaces: docker-compose.test.yml, docker-compose.local.yml, docker-compose.upload.yml
#
# Usage:
#   Development:  docker-compose --profile dev up
#   Testing:      docker-compose --profile test up
#   Full Stack:   docker-compose --profile full up
#   Core Only:    docker-compose up

services:
  # ═══════════════════════════════════════════════════════════════
  #  CORE SERVICES (Always Running)
  # ═══════════════════════════════════════════════════════════════

  mongodb:
    image: mongo:6
    container_name: formio-mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-formioapp}
    volumes:
      - mongo-data:/data/db
    networks:
      - formio-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    mem_limit: 1g
    cpus: 1.0

  redis:
    image: redis:7-alpine
    container_name: formio-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - formio-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    mem_limit: 512m
    cpus: 0.5

  gcs-emulator:
    image: fsouza/fake-gcs-server:latest
    container_name: formio-gcs
    ports:
      - "4443:4443"
    command:
      - "-scheme=http"
      - "-port=4443"
      - "-external-url=http://localhost:4443"
    volumes:
      - gcs-data:/data
    networks:
      - formio-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:4443/storage/v1/b"]
      interval: 5s
      timeout: 3s
      retries: 10
    tmpfs:
      - /data:rw,noexec,nosuid,size=1g

  formio-server:
    build:
      context: ./formio
      dockerfile: Dockerfile
      target: production
      args:
        - NODE_ENV=${NODE_ENV:-development}
    container_name: formio-server
    ports:
      - "${FORMIO_PORT:-3001}:3001"
    environment:
      # Database
      MONGO: mongodb://mongodb:27017/${MONGO_DB_NAME:-formioapp}

      # Secrets
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-change-in-production}
      DB_SECRET: ${DB_SECRET:-dev-db-secret-change-in-production}

      # Redis (BullMQ Job Queue)
      REDIS_HOST: redis
      REDIS_PORT: 6379

      # GCS Async Upload Configuration
      ENABLE_ASYNC_GCS_UPLOAD: ${ENABLE_ASYNC_GCS_UPLOAD:-true}
      BULLMQ_WORKER_CONCURRENCY: ${BULLMQ_WORKER_CONCURRENCY:-3}

      # GCS Storage Configuration
      FORMIO_FILES_SERVER: gcs
      FORMIO_S3_SERVER: http://gcs-emulator:4443
      FORMIO_S3_BUCKET: ${GCS_BUCKET_NAME:-formio-uploads}
      FORMIO_S3_REGION: auto
      FORMIO_S3_KEY: ${GCS_ACCESS_KEY:-local-access-key}
      FORMIO_S3_SECRET: ${GCS_SECRET_KEY:-local-secret-key}
      GCS_PROJECT_ID: ${GCS_PROJECT_ID:-formio-project}

      # Admin Credentials
      ROOT_EMAIL: ${ROOT_EMAIL:-admin@formio.local}
      ROOT_PASSWORD: ${ROOT_PASSWORD:-admin123}

      # Server Configuration
      PORT: 3001
      HOST: 0.0.0.0

      # CORS Configuration
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:64849,http://localhost:3000}

      # Logging
      DEBUG: ${DEBUG:-formio:*}
      NODE_ENV: ${NODE_ENV:-development}

      # Rate Limiting
      DISABLE_RATE_LIMIT: ${DISABLE_RATE_LIMIT:-false}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      gcs-emulator:
        condition: service_healthy
    networks:
      - formio-network
    volumes:
      - ./formio/config:/app/config:ro
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s
    mem_limit: 1g
    cpus: 1.0

  tus-server:
    image: tusproject/tusd:latest
    container_name: formio-tus
    user: "0:0"
    ports:
      - "${TUS_PORT:-1080}:1080"
    volumes:
      - tus-uploads:/data/uploads
    command:
      - "-host=0.0.0.0"
      - "-port=1080"
      - "-behind-proxy"
      - "-hooks-enabled-events=pre-create,post-create,post-receive,post-finish,post-terminate"
      - "-upload-dir=/data/uploads"
      - "-max-size=${TUS_MAX_SIZE:-5368709120}"
      - "-base-path=/files/"
    networks:
      - formio-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:1080/"]
      interval: 5s
      timeout: 3s
      retries: 5
    mem_limit: 512m
    cpus: 0.5

  # ═══════════════════════════════════════════════════════════════
  #  DEVELOPMENT SERVICES (--profile dev)
  # ═══════════════════════════════════════════════════════════════

  test-app:
    build:
      context: ./test-app
      dockerfile: Dockerfile.dev
    container_name: formio-test-app
    profiles: ["dev"]
    ports:
      - "64849:64849"
    environment:
      VITE_FORMIO_URL: http://formio-server:3001
      VITE_TUS_ENDPOINT: http://localhost:1080/files
    depends_on:
      formio-server:
        condition: service_healthy
    networks:
      - formio-network
    volumes:
      - ./test-app/src:/app/src:cached

  # ═══════════════════════════════════════════════════════════════
  #  TESTING SERVICES (--profile test)
  # ═══════════════════════════════════════════════════════════════

  playwright:
    image: mcr.microsoft.com/playwright:v1.55.0-jammy
    container_name: formio-playwright
    profiles: ["test"]
    working_dir: /app
    volumes:
      - ./test-app:/app:cached
    networks:
      - formio-network
    environment:
      CI: "true"
      FORMIO_URL: http://formio-server:3001
      TEST_APP_URL: http://test-app:64849
      PWDEBUG: "0"
    depends_on:
      formio-server:
        condition: service_healthy
    command: tail -f /dev/null

  # ═══════════════════════════════════════════════════════════════
  #  FULL STACK SERVICES (--profile full)
  # ═══════════════════════════════════════════════════════════════

  upload-processor:
    build:
      context: ./formio
      dockerfile: Dockerfile.processor
      target: production
    container_name: formio-upload-processor
    profiles: ["full"]
    environment:
      MONGO: mongodb://mongodb:27017/${MONGO_DB_NAME:-formioapp}
      TUS_UPLOAD_DIR: /data/uploads
      TUS_SERVER_URL: http://tus-server:1080
      FORMIO_FILES_SERVER: gcs
      FORMIO_S3_SERVER: http://gcs-emulator:4443
      FORMIO_S3_BUCKET: ${GCS_BUCKET_NAME:-formio-uploads}
      FORMIO_S3_REGION: auto
      FORMIO_S3_KEY: ${GCS_ACCESS_KEY:-local-access-key}
      FORMIO_S3_SECRET: ${GCS_SECRET_KEY:-local-secret-key}
      PROCESSOR_CONCURRENCY: ${PROCESSOR_CONCURRENCY:-5}
      PROCESSOR_BATCH_SIZE: ${PROCESSOR_BATCH_SIZE:-10}
      PROCESSOR_POLL_INTERVAL: ${PROCESSOR_POLL_INTERVAL:-5000}
      DEBUG: "formio:processor:*"
      NODE_ENV: ${NODE_ENV:-development}
    depends_on:
      mongodb:
        condition: service_healthy
      gcs-emulator:
        condition: service_healthy
      tus-server:
        condition: service_healthy
    networks:
      - formio-network
    volumes:
      - tus-uploads:/data/uploads:ro
      - processor-logs:/app/logs
    restart: unless-stopped
    mem_limit: 512m
    cpus: 0.5

  webhook-handler:
    build:
      context: ./formio
      dockerfile: Dockerfile.webhook
      target: production
    container_name: formio-webhook
    profiles: ["full"]
    ports:
      - "3002:3002"
    environment:
      MONGO: mongodb://mongodb:27017/${MONGO_DB_NAME:-formioapp}
      PORT: 3002
      HOST: 0.0.0.0
      FORMIO_S3_SERVER: http://gcs-emulator:4443
      FORMIO_S3_BUCKET: ${GCS_BUCKET_NAME:-formio-uploads}
      FORMIO_S3_KEY: ${GCS_ACCESS_KEY:-local-access-key}
      FORMIO_S3_SECRET: ${GCS_SECRET_KEY:-local-secret-key}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET:-local-webhook-secret}
      DEBUG: "formio:webhook:*"
      NODE_ENV: ${NODE_ENV:-development}
    depends_on:
      mongodb:
        condition: service_healthy
      tus-server:
        condition: service_healthy
    networks:
      - formio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3002/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    mem_limit: 256m
    cpus: 0.25

  nginx:
    image: nginx:alpine
    container_name: formio-nginx
    profiles: ["full"]
    ports:
      - "8080:80"
    volumes:
      - ./nginx/upload.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx-cache:/var/cache/nginx
      - nginx-logs:/var/log/nginx
    depends_on:
      - tus-server
      - formio-server
      - webhook-handler
    networks:
      - formio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    mem_limit: 128m
    cpus: 0.25

networks:
  formio-network:
    name: formio_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  mongo-data:
    name: formio_mongo_data
    driver: local
  redis-data:
    name: formio_redis_data
    driver: local
  gcs-data:
    name: formio_gcs_data
    driver: local
  tus-uploads:
    name: formio_tus_uploads
    driver: local
  processor-logs:
    name: formio_processor_logs
    driver: local
  nginx-cache:
    name: formio_nginx_cache
    driver: local
  nginx-logs:
    name: formio_nginx_logs
    driver: local

# ═══════════════════════════════════════════════════════════════
#  USAGE EXAMPLES
# ═══════════════════════════════════════════════════════════════
#
# Core services only (MongoDB, Redis, GCS, Form.io, TUS):
#   docker-compose up -d
#
# Development with test app:
#   docker-compose --profile dev up -d
#
# Testing with Playwright:
#   docker-compose --profile test up -d
#
# Full stack (includes nginx, processor, webhooks):
#   docker-compose --profile full up -d
#
# Cleanup:
#   docker-compose down -v
#
# ═══════════════════════════════════════════════════════════════
