name: Publish @qrius/formio-react to GitHub Packages

on:
  push:
    branches: [main]
    paths:
      - "formio-react/**"
      - ".github/workflows/publish-formio-react.yml"
  workflow_dispatch:
    inputs:
      version_bump:
        description: "Version bump type (patch, minor, major, or leave empty to use current)"
        required: false
        default: "patch"

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./formio-react

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://npm.pkg.github.com"
          scope: "@qrius"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        continue-on-error: true

      - name: Build package
        run: npm run build

      - name: Verify build output
        run: |
          echo "Build output:"
          ls -la lib/
          echo "Package contents:"
          npm pack --dry-run

      - name: Bump version (if specified)
        if: github.event.inputs.version_bump != ''
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Get current version
        if: github.event.inputs.version_bump == ''
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create git tag
        if: github.event.inputs.version_bump != ''
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "@qrius/formio-react@${{ env.NEW_VERSION }}"
          git push origin "@qrius/formio-react@${{ env.NEW_VERSION }}"

      - name: Create GitHub Release
        if: github.event.inputs.version_bump != ''
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "@qrius/formio-react@${{ env.NEW_VERSION }}"
          release_name: "@qrius/formio-react v${{ env.NEW_VERSION }}"
          body: |
            Published @qrius/formio-react@${{ env.NEW_VERSION }} to GitHub Packages

            Install: `npm install @qrius/formio-react@${{ env.NEW_VERSION }}`
          draft: false
          prerelease: false

      - name: Summary
        run: |
          echo "âœ… Published @qrius/formio-react@${{ env.NEW_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¦ Package URL: https://github.com/QriusGlobal/formio-monorepo-private/packages" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”— Install: \`npm install @qrius/formio-react@${{ env.NEW_VERSION }}\`" >> $GITHUB_STEP_SUMMARY
